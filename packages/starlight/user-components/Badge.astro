---
import { AstroError } from 'astro/errors';
import { type Badge, badgeVariants } from '../schemas/badge';

interface Props {
	variant?: Badge['variant'];
	text?: string;
	class?: string;
}

const { variant = 'default', text, class: className } = Astro.props;

if (!badgeVariants.includes(variant)) {
	throw new AstroError(
		'Invalid `variant` prop passed to the `<Badge>` component.\n',
		`Received: ${JSON.stringify(variant)}\n` +
			`Expected one of ${badgeVariants.map((i) => JSON.stringify(i)).join(', ')}`
	);
}
---

<span class:list={['sl-badge', variant, className]} set:html={text} />

<style>
	:global(:root) {
		--sl-badge-default-border: var(--sl-color-accent);
		--sl-badge-default-bg: var(--sl-color-accent-low);
		--sl-badge-default-text: unset;

		--sl-badge-note-border: var(--sl-color-blue);
		--sl-badge-note-bg: var(--sl-color-blue-low);
		--sl-badge-note-text: unset;

		--sl-badge-danger-border: var(--sl-color-red);
		--sl-badge-danger-bg: var(--sl-color-red-low);
		--sl-badge-danger-text: unset;

		--sl-badge-success-border: var(--sl-color-green);
		--sl-badge-success-bg: var(--sl-color-green-low);
		--sl-badge-success-text: unset;

		--sl-badge-caution-border: var(--sl-color-orange);
		--sl-badge-caution-bg: var(--sl-color-orange-low);
		--sl-badge-caution-text: unset;

		--sl-badge-tip-border: var(--sl-color-purple);
		--sl-badge-tip-bg: var(--sl-color-purple-low);
		--sl-badge-tip-text: unset;
	}

	:global([data-theme='light']:root) {
		--sl-badge-default-bg: var(--sl-color-accent-low);
		--sl-badge-default-border: var(--sl-color-accent);
		--sl-badge-default-text: var(--sl-color-accent-high);

		--sl-badge-note-bg: var(--sl-color-blue-low);
		--sl-badge-note-border: var(--sl-color-blue);
		--sl-badge-note-text: var(--sl-color-blue-high);

		--sl-badge-danger-bg: var(--sl-color-red-low);
		--sl-badge-danger-border: var(--sl-color-red);
		--sl-badge-danger-text: var(--sl-color-red-high);

		--sl-badge-success-bg: var(--sl-color-green-low);
		--sl-badge-success-border: var(--sl-color-green);
		--sl-badge-success-text: var(--sl-color-green-high);

		--sl-badge-caution-bg: var(--sl-color-orange-low);
		--sl-badge-caution-border: var(--sl-color-orange);
		--sl-badge-caution-text: var(--sl-color-orange-high);

		--sl-badge-tip-bg: var(--sl-color-purple-low);
		--sl-badge-tip-border: var(--sl-color-purple);
		--sl-badge-tip-text: var(--sl-color-purple-high);
	}

	.sl-badge {
		display: inline-block;
		border: 1px solid var(--sl-color-border-badge);
		border-radius: 0.25rem;
		font-family: var(--sl-font-system-mono);
		padding: 0.125rem 0.375rem;
		line-height: normal;
		color: var(--sl-color-text-badge, #fff);
		background-color: var(--sl-color-bg-badge);
		overflow-wrap: anywhere;
	}

	/* Sidebar overrides */
	:global(#starlight__sidebar) .sl-badge {
		line-height: 1;
		font-size: var(--sl-text-xs);
	}

	/* Markdown content overrides */
	:global(.sl-markdown-content :not(h1, h2, h3, h4, h5, h6)) .sl-badge {
		font-size: var(--sl-text-sm);
	}

	/* outline variant */
	:global(a[aria-current='page']) > .sl-badge {
		--sl-color-bg-badge: transparent;
		--sl-color-border-badge: currentColor;
		color: inherit;
	}

	/* Color variants */
	.default {
		--sl-color-bg-badge: var(--sl-badge-default-bg);
		--sl-color-border-badge: var(--sl-badge-default-border);
		--sl-color-text-badge: var(--sl-badge-default-text);
	}

	.note {
		--sl-color-bg-badge: var(--sl-badge-note-bg);
		--sl-color-border-badge: var(--sl-badge-note-border);
		--sl-color-text-badge: var(--sl-badge-note-text);
	}

	.danger {
		--sl-color-bg-badge: var(--sl-badge-danger-bg);
		--sl-color-border-badge: var(--sl-badge-danger-border);
		--sl-color-text-badge: var(--sl-badge-danger-text);
	}

	.success {
		--sl-color-bg-badge: var(--sl-badge-success-bg);
		--sl-color-border-badge: var(--sl-badge-success-border);
		--sl-color-text-badge: var(--sl-badge-success-text);
	}

	.tip {
		--sl-color-bg-badge: var(--sl-badge-tip-bg);
		--sl-color-border-badge: var(--sl-badge-tip-border);
		--sl-color-text-badge: var(--sl-badge-tip-text);
	}

	.caution {
		--sl-color-bg-badge: var(--sl-badge-caution-bg);
		--sl-color-border-badge: var(--sl-badge-caution-border);
		--sl-color-text-badge: var(--sl-badge-caution-text);
	}
</style>
